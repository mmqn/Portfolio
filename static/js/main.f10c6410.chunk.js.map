{"version":3,"sources":["img/logo_light.svg","img/logo_dark.svg","img/chevron_down.svg","components/Sidebar.jsx","components/ActionButtons.jsx","util/setMarkdownContent.js","components/MobileStoryReader.jsx","components/FilterMenu.jsx","components/Navbar.jsx","components/StoryCard.jsx","pages/Home.jsx","util/matchAgainstFilters.js","pages/Story.jsx","pages/Photography.jsx","pages/About.jsx","App.jsx","util/useWindowWidthWatcher.js","styles/ThemeStyles.js","index.js"],"names":["module","exports","Sidebar","siteDescription","windowWidth","isMobile","isHomePage","isUsingDarkTheme","to","className","style","marginRight","role","alt","src","lightLogo","darkLogo","fontSize","ActionButtons","setIsUsingDarkTheme","type","aria-label","onClick","ev","preventDefault","prevState","a","storyId","setContent","contentPath","fetch","response","text","content","convertedContent","convertMarkdown","console","error","MobileStoryReader","storyProperties","unmountMobileStoryReader","id","title","tags","useState","isUnmounting","setIsUnmounting","useEffect","setMarkdownContent","handleUnmount","CloseButton","isBottom","marginBottom","chevronDown","width","defaultProps","onScroll","target","scrollTop","onAnimationEnd","map","tag","key","cursor","dangerouslySetInnerHTML","__html","FilterMenu","allFilters","activeFilters","handleFiltering","isFlashing","setIsFlashing","length","value","checked","includes","readOnly","Navbar","stories","uniqueTags","useMemo","allTags","story","flat","Set","StoryCard","storyInfo","mountMobileStoryReader","brief","cardContent","Home","currentStories","setCurrentStories","setActiveFilters","contentRef","useRef","lastPagePosition","sessionStorage","getItem","current","handleFilteringPreprocess","newFilter","prevActiveFilters","newActiveFilters","filterIsActive","filter","newFilters","newStories","objectProperties","filtersToMatch","filtersChecksum","propertiesChecksum","forEach","property","matchAgainstFilters","ref","contentScrollTop","setItem","Story","flexDirection","Photography","About","loadingStory","errorStory","curHour","Date","getHours","projectStories","setProjectStories","photographyStories","mount","mobileStoryReaderProperties","setMobileStoryReaderProperties","window","innerWidth","setWindowWidth","handleWidthUpdates","e","addEventListener","useWindowWidthWatcher","currentPage","useLocation","pathname","fetchProjects","status","json","data","warn","test","path","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f10c6410.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_light.ebed6ab3.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_dark.e9ae414a.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron_down.288e2aae.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport lightLogo from '../img/logo_light.svg';\nimport darkLogo from '../img/logo_dark.svg';\n\nconst Sidebar = ({\n  siteDescription,\n  windowWidth,\n  isMobile,\n  isHomePage,\n  isUsingDarkTheme,\n}) => {\n  return (\n    <>\n      <Link to='/' className='unset-a-defaults' style={{ marginRight: '2vw' }}>\n        <aside role='button'>\n          <img\n            alt='Personal Logo'\n            src={isUsingDarkTheme ? lightLogo : darkLogo}\n          />\n\n          <h1 style={isMobile ? {} : { fontSize: windowWidth * 0.028 }}>\n            Michael M.\n            <br />\n            Q. Nguyen\n          </h1>\n\n          {isMobile && isHomePage && <p>{siteDescription}</p>}\n\n          {!isMobile && <p>{siteDescription}</p>}\n        </aside>\n      </Link>\n    </>\n  );\n};\n\nSidebar.propTypes = {\n  siteDescription: PropTypes.string.isRequired,\n  windowWidth: PropTypes.number.isRequired,\n  isMobile: PropTypes.bool.isRequired,\n  isHomePage: PropTypes.bool.isRequired,\n  isUsingDarkTheme: PropTypes.bool.isRequired,\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst ActionButtons = ({\n  isHomePage,\n  isUsingDarkTheme,\n  setIsUsingDarkTheme,\n}) => {\n  const handleSwitchTheme = ev => {\n    ev.preventDefault(); // stops event from bubbling to sidebar, which links to home page\n\n    setIsUsingDarkTheme(prevState => !prevState);\n  };\n\n  return (\n    <div className='action-buttons'>\n      {!isHomePage && (\n        <Link to='/' className='unset-a-defaults'>\n          <button\n            type='button'\n            className='action-button'\n            style={{ marginRight: '10px' }}\n          >\n            <span\n              role='img'\n              aria-label='house'\n              style={{ fontSize: '16px', marginRight: '12px' }}\n            >\n              🏡\n            </span>{' '}\n            Home\n          </button>\n        </Link>\n      )}\n\n      <button\n        type='button'\n        className='action-button'\n        onClick={handleSwitchTheme}\n      >\n        <span\n          role='img'\n          aria-label={isUsingDarkTheme ? 'Moon' : 'Sun'}\n          style={{ fontSize: '16px', marginRight: '12px' }}\n        >\n          {isUsingDarkTheme ? '🌘' : '🌤️'}\n        </span>\n        {isUsingDarkTheme ? 'Dark' : 'Light'} Mode\n      </button>\n    </div>\n  );\n};\n\nActionButtons.propTypes = {\n  isHomePage: PropTypes.bool.isRequired,\n  isUsingDarkTheme: PropTypes.bool.isRequired,\n  setIsUsingDarkTheme: PropTypes.func.isRequired,\n};\n\nexport default ActionButtons;\n","import convertMarkdown from 'marked';\r\n\r\nexport default async ({ storyId, setContent }) => {\r\n  try {\r\n    const contentPath = `https://raw.githubusercontent.com/mmqn/portfolio_stories/master/${storyId}/${storyId}.md`;\r\n\r\n    const response = await fetch(contentPath);\r\n    const content = await response.text();\r\n    const convertedContent = convertMarkdown(content);\r\n\r\n    setContent(convertedContent);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport setMarkdownContent from '../util/setMarkdownContent';\r\nimport chevronDown from '../img/chevron_down.svg';\r\n\r\nconst MobileStoryReader = ({ storyProperties, unmountMobileStoryReader }) => {\r\n  const { id, title, tags } = storyProperties;\r\n\r\n  const [content, setContent] = useState('<h2>Loading...</h2>');\r\n  const [isUnmounting, setIsUnmounting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMarkdownContent({ storyId: id, setContent });\r\n  }, [id]);\r\n\r\n  const handleUnmount = () => setIsUnmounting(true);\r\n\r\n  const CloseButton = ({ isBottom }) => (\r\n    <button\r\n      type='button'\r\n      className='mobile-story-reader-close-button'\r\n      style={isBottom ? { marginBottom: '120px' } : {}}\r\n      onClick={handleUnmount}\r\n    >\r\n      <img alt='Chevron Down' src={chevronDown} style={{ width: '70px' }} />\r\n    </button>\r\n  );\r\n\r\n  CloseButton.propTypes = { isBottom: PropTypes.bool };\r\n  CloseButton.defaultProps = { isBottom: false };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id='mobile-story-reader'\r\n        className={isUnmounting ? 'mobile-story-reader--slide-out' : ''}\r\n        onScroll={ev => ev.target.scrollTop < -100 && handleUnmount()}\r\n        onAnimationEnd={isUnmounting ? unmountMobileStoryReader : null}\r\n      >\r\n        <CloseButton />\r\n\r\n        <div className='story-title'>\r\n          <h2>{title}</h2>\r\n\r\n          <div className='tags-list'>\r\n            {tags.map(tag => (\r\n              <span key={tag} className='tag' style={{ cursor: 'text' }}>\r\n                {tag}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <article dangerouslySetInnerHTML={{ __html: content }} />\r\n\r\n        <CloseButton isBottom />\r\n      </div>\r\n\r\n      <div\r\n        id='background-cover'\r\n        className={isUnmounting ? 'fade-out' : 'fade-in'}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nMobileStoryReader.propTypes = {\r\n  storyProperties: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n    brief: PropTypes.string,\r\n  }).isRequired,\r\n  unmountMobileStoryReader: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MobileStoryReader;\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterMenu = ({ allFilters, activeFilters, handleFiltering }) => {\n  const [isFlashing, setIsFlashing] = useState(false);\n\n  useEffect(() => {\n    if (activeFilters.length > 0) setIsFlashing(true);\n  }, [activeFilters]);\n\n  return (\n    <div id='filter-menu-opener'>\n      <button\n        type='button'\n        className={`internal-link ${isFlashing ? 'flash' : ''}`}\n        onAnimationEnd={() => setIsFlashing(false)}\n      >\n        Filter\n      </button>\n\n      <div id='filter-menu' className='fade-in'>\n        {allFilters.map(tag => {\n          const handleForwardFiltering = () => handleFiltering(tag);\n\n          return (\n            <p\n              key={tag}\n              className='tag tag-clickable'\n              role='button'\n              onClick={handleForwardFiltering}\n            >\n              <input\n                type='checkbox'\n                value={tag}\n                checked={activeFilters.includes(tag)}\n                readOnly\n              />\n              {tag}\n            </p>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nFilterMenu.propTypes = {\n  allFilters: PropTypes.array.isRequired,\n  activeFilters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleFiltering: PropTypes.func.isRequired,\n};\n\nexport default FilterMenu;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport FilterMenu from '../components/FilterMenu';\n\nconst Navbar = ({ isMobile, stories, activeFilters, handleFiltering }) => {\n  const uniqueTags = useMemo(() => {\n    const allTags = stories.map(story => story.tags).flat();\n    return [...new Set(allTags)];\n  }, [stories]);\n\n  // TODO Uncomment Photography and About links\n  return (\n    !isMobile && (\n      <nav>\n        <div className='nav-links'>\n          <Link\n            to='/'\n            className='unset-a-defaults internal-link'\n            // style={{ marginRight: '18px' }}\n          >\n            Projects\n          </Link>\n\n          {/* <Link\n          to='/photography/'\n          className='unset-a-defaults internal-link'\n          style={{ marginRight: '18px' }}\n          >\n            Photography\n          </Link>\n\n          <Link\n            to='/about/'\n            className='unset-a-defaults internal-link'\n          >\n            About\n          </Link> */}\n        </div>\n\n        {!isMobile && stories.length > 0 && (\n          <FilterMenu\n            allFilters={uniqueTags}\n            activeFilters={activeFilters}\n            handleFiltering={handleFiltering}\n          />\n        )}\n      </nav>\n    )\n  );\n};\n\nNavbar.propTypes = {\n  isMobile: PropTypes.bool.isRequired,\n  stories: PropTypes.arrayOf(\n    PropTypes.shape({\n      tags: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n  activeFilters: PropTypes.arrayOf(PropTypes.string),\n  handleFiltering: PropTypes.func,\n};\n\nNavbar.defaultProps = {\n  stories: [],\n  activeFilters: [],\n  handleFiltering: () => {},\n};\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst StoryCard = ({\n  storyInfo,\n  isMobile,\n  handleFiltering,\n  mountMobileStoryReader,\n}) => {\n  const { id, title, tags, brief } = storyInfo;\n\n  const handleMountMobileStoryReader = () => mountMobileStoryReader(id);\n\n  const cardContent = (\n    <div className='story-card'>\n      <h2>{title}</h2>\n\n      <div className='tags-list'>\n        {tags.map(tag => (\n          <span\n            title={`Click to apply filter for ${tag}`}\n            key={`${id}-${tag}`}\n            className='tag tag-clickable'\n            role='button'\n            onClick={ev => {\n              ev.preventDefault();\n              handleFiltering(tag);\n            }}\n          >\n            {tag}\n          </span>\n        ))}\n      </div>\n\n      <p>{brief}</p>\n\n      <img\n        alt={`${title}`}\n        src={\n          id\n            ? `https://raw.githubusercontent.com/mmqn/portfolio_stories/master/${id}/resources/cover.png`\n            : null\n        }\n      />\n    </div>\n  );\n\n  return isMobile ? (\n    <div role='button' onClick={handleMountMobileStoryReader}>\n      {cardContent}\n    </div>\n  ) : (\n    <Link to={`/story/${id}`} className='unset-a-defaults'>\n      {cardContent}\n    </Link>\n  );\n};\n\nStoryCard.propTypes = {\n  storyInfo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    brief: PropTypes.string,\n  }).isRequired,\n  isMobile: PropTypes.bool.isRequired,\n  handleFiltering: PropTypes.func.isRequired,\n  mountMobileStoryReader: PropTypes.func.isRequired,\n};\n\nexport default StoryCard;\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Navbar from '../components/Navbar';\nimport StoryCard from '../components/StoryCard';\nimport matchAgainstFilters from '../util/matchAgainstFilters';\n\nconst Home = ({ stories, isMobile, mountMobileStoryReader }) => {\n  const [currentStories, setCurrentStories] = useState(stories);\n  const [activeFilters, setActiveFilters] = useState([]);\n\n  const contentRef = useRef(null);\n\n  // Set page vertical scroll position to previous position\n  useEffect(() => {\n    const lastPagePosition =\n      sessionStorage.getItem('last-page-position') || null;\n\n    if (contentRef && lastPagePosition) {\n      contentRef.current.scrollTop = lastPagePosition;\n    }\n  }, []);\n\n  useEffect(() => {\n    setCurrentStories(stories);\n  }, [stories]);\n\n  const updateLastPagePosition = ev => {\n    const contentScrollTop = ev.target.scrollTop;\n    sessionStorage.setItem('last-page-position', contentScrollTop);\n  };\n\n  const handleFiltering = newFilters => {\n    if (newFilters.length > 0) {\n      const newStories = stories.filter(story =>\n        matchAgainstFilters({\n          objectProperties: story.tags,\n          filtersToMatch: newFilters,\n        }),\n      );\n\n      setCurrentStories(newStories);\n    } else setCurrentStories(stories);\n  };\n\n  const handleFilteringPreprocess = newFilter => {\n    setActiveFilters(prevActiveFilters => {\n      let newActiveFilters = [];\n      const filterIsActive = prevActiveFilters.includes(newFilter);\n\n      if (filterIsActive) {\n        newActiveFilters = prevActiveFilters.filter(\n          filter => filter !== newFilter,\n        );\n      } else if (!filterIsActive) {\n        newActiveFilters = [...prevActiveFilters, newFilter];\n      }\n\n      handleFiltering(newActiveFilters);\n      return newActiveFilters;\n    });\n  };\n\n  return (\n    <main ref={contentRef} onScroll={updateLastPagePosition}>\n      <Navbar\n        isMobile={isMobile}\n        stories={stories}\n        activeFilters={activeFilters}\n        handleFiltering={handleFilteringPreprocess}\n      />\n\n      {currentStories.map(story => (\n        <StoryCard\n          key={story.id}\n          storyInfo={story}\n          isMobile={isMobile}\n          handleFiltering={handleFilteringPreprocess}\n          mountMobileStoryReader={mountMobileStoryReader}\n        />\n      ))}\n\n      {isMobile && <div className='scroll-right-hint' />}\n    </main>\n  );\n};\n\nHome.propTypes = {\n  stories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      tags: PropTypes.arrayOf(PropTypes.string),\n      brief: PropTypes.string,\n    }),\n  ),\n  isMobile: PropTypes.bool.isRequired,\n  mountMobileStoryReader: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","export default ({ objectProperties, filtersToMatch }) => {\n\tconst filtersChecksum = filtersToMatch.length;\n\tlet propertiesChecksum = 0;\n\n\tobjectProperties.forEach(property => {\n\t\tif (filtersToMatch.includes(property)) propertiesChecksum += 1;\n\t});\n\n\tif (filtersChecksum === propertiesChecksum) return true;\n\treturn false;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport setMarkdownContent from '../util/setMarkdownContent';\nimport Navbar from '../components/Navbar';\n\nconst Story = ({ storyProperties, isMobile }) => {\n  const { id, title, tags } = storyProperties;\n\n  const [content, setContent] = useState('<h2>Loading...</h2>');\n\n  useEffect(() => {\n    setMarkdownContent({ storyId: id, setContent });\n  }, [id]);\n\n  return (\n    <>\n      <main style={{ flexDirection: 'column' }}>\n        {!isMobile && <Navbar isMobile={isMobile} />}\n\n        <div className='story-title'>\n          <h2>{title}</h2>\n\n          <div className='tags-list'>\n            {tags.map(tag => (\n              <span key={tag} className='tag' style={{ cursor: 'text' }}>\n                {tag}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        <article dangerouslySetInnerHTML={{ __html: content }} />\n      </main>\n    </>\n  );\n};\n\nStory.propTypes = {\n  storyProperties: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    brief: PropTypes.string,\n  }).isRequired,\n  isMobile: PropTypes.bool.isRequired,\n};\n\nexport default Story;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Navbar from '../components/Navbar';\nimport StoryCard from '../components/StoryCard';\n\nconst Photography = ({ stories, isMobile }) => {\n  return (\n    <main>\n\n    </main>\n  );\n};\n\nPhotography.propTypes = {\n  stories: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n      tags: PropTypes.arrayOf(PropTypes.string),\n      brief: PropTypes.string,\n    }),\n  ),\n  isMobile: PropTypes.bool.isRequired,\n};\n\nexport default Photography;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst About = ({}) => {\n  return <h1>About Page</h1>;\n};\n\nAbout.propTypes = {};\n\nAbout.defaultProps = {};\n\nexport default About;\n","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport './styles/App.css';\nimport { lightThemeStyle, darkThemeStyle } from './styles/ThemeStyles';\nimport useWindowWidthWatcher from './util/useWindowWidthWatcher';\nimport Sidebar from './components/Sidebar';\nimport ActionButtons from './components/ActionButtons';\nimport MobileStoryReader from './components/MobileStoryReader';\nimport Home from './pages/Home';\nimport Story from './pages/Story';\nimport Photography from './pages/Photography';\nimport About from './pages/About';\n\nconst SITE_DECRIPTION =\n  'Public repository of a diverse set of coding and design projects I’ve done, ranging from college years as former architecture student, to a applications development student, to now as front-end developer.';\n\nconst PROJECTS_ENDPOINT = 'https://portfolio-mmqn.firebaseio.com/projects.json';\nconst PHOTOS_ENDPOINT = 'https://portfolio-mmqn.firebaseio.com/photos.json';\n\nconst loadingStory = {\n  id: '',\n  title: 'Loading...',\n  tags: [],\n  brief: '',\n};\n\nconst errorStory = {\n  id: '',\n  title: 'Oh dear, something went wrong 🌦',\n  tags: [],\n  brief:\n    \"It looks like projects aren't loading right now. It's (probably) not you, it's me.\",\n};\n\n// Disables scrolling for body element when using mobile story reader\nconst disableBodyScrolling = `\n  body {\n    overflow: hidden;\n    touch-action: none;\n    overscroll-behavior: none;\n    -webkit-overflow-scrolling: auto;\n  }\n}`;\n\nexport default () => {\n  const curHour = useRef(new Date().getHours()).current;\n\n  const [projectStories, setProjectStories] = useState([loadingStory]);\n  const [photographyStories, setPhotographyStories] = useState([loadingStory]);\n  const [isUsingDarkTheme, setIsUsingDarkTheme] = useState(\n    curHour >= 18 || curHour <= 7 ? true : false,\n  );\n  const [\n    mobileStoryReaderProperties,\n    setMobileStoryReaderProperties,\n  ] = useState({ mount: false, storyProperties: null });\n\n  const windowWidth = useWindowWidthWatcher();\n  const currentPage = useLocation().pathname;\n\n  const fetchProjects = async () => {\n    const response = await fetch(PROJECTS_ENDPOINT);\n    const status = response.status;\n    const data = await response.json();\n\n    if (status === 200 && data) {\n      setProjectStories(data);\n    } else {\n      console.warn({ status, response });\n      setProjectStories([errorStory]);\n    }\n  };\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const isMobile = windowWidth <= 999;\n  const isHomePage = useMemo(() => !/\\/story\\//gi.test(currentPage), [\n    currentPage,\n  ]);\n\n  const mountMobileStoryReader = storyId =>\n    setMobileStoryReaderProperties({\n      mount: true,\n      storyProperties: projectStories.find(({ id }) => id === storyId) || {\n        id: '0',\n        title: 'Error: Unable to load article 🌧',\n        tags: [],\n        brief: 'Please try refreshing this page.',\n      },\n    });\n\n  const unmountMobileStoryReader = () =>\n    setMobileStoryReaderProperties({ mount: false, storyId: null });\n\n  return (\n    <>\n      <div\n        id='container'\n        className={\n          mobileStoryReaderProperties.mount ? 'scale-down' : 'scale-back'\n        }\n      >\n        <style>{isUsingDarkTheme ? darkThemeStyle : lightThemeStyle}</style>\n\n        <style>\n          {mobileStoryReaderProperties.mount ? disableBodyScrolling : ''}\n        </style>\n\n        <Sidebar\n          siteDescription={SITE_DECRIPTION}\n          windowWidth={windowWidth}\n          isMobile={isMobile}\n          isHomePage={isHomePage}\n          isUsingDarkTheme={isUsingDarkTheme}\n        />\n\n        <Switch>\n          {projectStories.map(story => (\n            <Route key={story.id} path={`/story/${story.id}/`}>\n              <Story storyProperties={story} isMobile={isMobile} />\n            </Route>\n          ))}\n\n          <Route path='/photos/'>\n            <Photography stories={photographyStories} isMobile={isMobile} />\n          </Route>\n\n          <Route path='/about/'>\n            <About />\n          </Route>\n\n          <Route>\n            <Home\n              stories={projectStories}\n              isMobile={isMobile}\n              mountMobileStoryReader={mountMobileStoryReader}\n            />\n          </Route>\n        </Switch>\n      </div>\n\n      <ActionButtons\n        isHomePage={isHomePage}\n        isUsingDarkTheme={isUsingDarkTheme}\n        setIsUsingDarkTheme={setIsUsingDarkTheme}\n      />\n\n      {mobileStoryReaderProperties.mount && (\n        <MobileStoryReader\n          storyProperties={mobileStoryReaderProperties.storyProperties}\n          unmountMobileStoryReader={unmountMobileStoryReader}\n        />\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleWidthUpdates = e => setWindowWidth(e.target.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWidthUpdates);\n  }, []);\n\n  return windowWidth;\n};\n","export const lightThemeStyle = `\nbody {\n\tbackground-color: #fafafa;\n\tcolor: #242424;\n}\n\nh1 {\n\tcolor: #003192;\n}\n\nh2 {\n\tcolor: #242424;\n}\n\nmain {\n\tscrollbar-color: #d5d5d5 #fafafa;\n}\n\naside {\n\tbackground-color: #f0f0f0;\n}\n\nnav {\n\tbackground-color: #fafafa;\n}\n\n#filter-menu {\n\tbackground-color: #f0f0f0;\n\tbox-shadow: 0px 1px 6px #b5b5b5;\n}\n\n.action-button {\n\tcolor: #242424;\n\tbackground-color: #f0f0f0;\n}\n\n.action-button:active {\n\tbackground-color: #ff8e65;\n}\n\n.internal-link {\n\tcolor: #242424;\n}\n\n.internal-link:visited {\n\tcolor: #242424;\n}\n\n.internal-link:hover {\n\tcolor: #003192;\n}\n\n.internal-link:before {\n\tbackground-color: #003192;\n}\n\narticle a {\n\tcolor: #003192;\n}\n\narticle a:visited {\n\tcolor: #003192;\n}\n\narticle a:hover {\n\tcolor: #4080ff;\n}\n\narticle a:before {\n\tbackground-color: #4080ff;\n}\n\n@keyframes flash {\n  0% {\n    color: #242424;\n  }\n  25% {\n    color: #003192;\n  }\n  50% {\n    color: #242424;\n  }\n  75% {\n    color: #003192;\n  }\n  100% {\n    color: #242424;\n  }\n}\n\n::-webkit-scrollbar {\n\twidth: 6px;\n}\n\n::-webkit-scrollbar-track {\n\tbackground: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n\tborder-radius: 2px;\n\tbackground: #d5d5d5;\n}\n\n::-webkit-scrollbar-thumb:hover {\n\tbackground: #bbbbbb;\n}\n\n@media (hover: hover) {\n\taside:hover {\n\t\tbox-shadow: 0px 1px 6px #b5b5b5;\n\t}\n\n\tarticle img:hover, video:hover {\n\t\tbox-shadow: 0px 4px 6px #9b9b9b; \n\t}\n\n\t.story-card:hover {\n\t\tborder: 1px solid #e1dfdf;\n\t\tbox-shadow: 0px 1px 6px #eaeaea;\n\t}\n\t\n\t.story-card:hover p {\n\t\tcolor: #000000;\n\t}\n\t\n\t.story-card:hover h2 {\n\t\tcolor: #003192;\n\t}\n\t\n\t.tag-clickable:hover {\n\t\tcolor: #003192;\n\t}\n\n\t.action-button:hover {\n\t\tbox-shadow: 0px 1px 6px #b5b5b5; \n\t}\n}\n\n/* desktop-ish */\n@media only screen and (min-width: 1000px) {\n\t.story-title {\n\t\tbackground-color: #fafafa;\n\t}\n}\n\n/* mobile-ish */\n@media only screen and (max-width: 999px) {\n\tmain {\n\t\tborder: 1px solid #dfdfdf;\n\t}\n\n\tnav {\n\t\tborder-right: 1px solid #dfdfdf;\n\t}\n\n\t#mobile-story-reader {\n\t\tbackground-color: #fafafa;\n\t}\n\n\t.mobile-story-reader-close-button {\n\t\tcolor: #003192;\n\t}\n}`;\n\nexport const darkThemeStyle = `\nbody {\n\tbackground-color: #1a1a1a;\n\tcolor: #e3e3e3;\n}\n\nh1 {\n\tcolor: #6fa0ff;\n}\n\nh2 {\n\tcolor: #e3e3e3;\n}\n\nmain {\n\tscrollbar-color: #333333 #1a1a1a;\n}\n\naside {\n\tbackground-color: #2f2f2f;\n}\n\nnav {\n\tbackground-color: #1a1a1a;\n}\n\n#filter-menu {\n\tbackground-color: #2f2f2f;\n\tbox-shadow: 0px 1px 6px #000000;\n}\n\n.action-button {\n\tcolor: #e3e3e3;\n\tbackground-color: #2f2f2f;\n}\n\n.action-button:active {\n\tbackground-color: #ff7f50;\n}\n\n.internal-link {\n\tcolor: #e3e3e3;\n}\n\n.internal-link:visited {\n\tcolor: #e3e3e3;\n}\n\n.internal-link:hover {\n\tcolor: #6fa0ff;\n}\n\n.internal-link:before {\n\tbackground-color: #6fa0ff;\n}\n\narticle a {\n\tcolor: #6fa0ff;\n}\n\narticle a:visited {\n\tcolor: #6fa0ff;\n}\n\narticle a:hover {\n\tcolor: #a8c5ff;\n}\n\narticle a:before {\n\tbackground-color: #a8c5ff;\n}\n\n@keyframes flash {\n  0% {\n    color: #e3e3e3;\n  }\n  25% {\n    color: #6fa0ff;\n  }\n  50% {\n    color: #e3e3e3;\n  }\n  75% {\n    color: #6fa0ff;\n  }\n  100% {\n    color: #e3e3e3;\n  }\n}\n\n::-webkit-scrollbar {\n\twidth: 6px;\n}\n\n::-webkit-scrollbar-track {\n\tbackground: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n\tborder-radius: 2px;\n\tbackground: #333333;\n}\n\n::-webkit-scrollbar-thumb:hover {\n\tbackground: #666666;\n}\n\n@media (hover: hover) {\n\taside:hover {\n\t\tbox-shadow: 0px 1px 6px #111111;\n\t}\n\n\tarticle img:hover, video:hover {\n\t\tbox-shadow: 0px 4px 6px #111111; \n\t}\n\n\t.story-card:hover {\n\t\tborder: 1px solid #333333;\n\t\tbox-shadow: 0px 1px 6px #111111;\n\t}\n\n\t.story-card:hover p {\n\t\tcolor: #ffffff;\n\t}\n\n\t.story-card:hover h2 {\n\t\tcolor: #6fa0ff;\n\t}\n\n\t.tag-clickable:hover {\n\t\tcolor: #6fa0ff;\n\t}\n\n\t.action-button:hover {\n\t\tbox-shadow: 0px 1px 6px #111111; \n\t}\n}\n\n/* desktop-ish */\n@media only screen and (min-width: 1000px) {\n\t.story-title {\n\t\tbackground-color: #1a1a1a;\n\t}\n}\n\n/* mobile-ish */\n@media only screen and (max-width: 999px) {\n\tmain {\n\t\tborder: 1px solid #454545;\n\t}\n\n\tnav {\n\t\tborder-right: 1px solid #454545;\n\t}\n\n\t#mobile-story-reader {\n\t\tbackground-color: #212121;\n\t}\n\n\t.mobile-story-reader-close-button {\n\t\tcolor: #6fa0ff;\n\t}\n}`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}